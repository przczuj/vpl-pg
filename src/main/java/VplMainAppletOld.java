
import com.jogamp.opengl.util.FPSAnimator;
import java.awt.BorderLayout;
import java.awt.Container;
import java.util.TimerTask;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import javax.media.opengl.GLAnimatorControl;
import javax.media.opengl.GLProfile;
import javax.media.opengl.awt.GLCanvas;
import javax.swing.JFrame;
import javax.swing.JPanel;
import joglTest.JOGLtest;
import sun.security.util.SecurityConstants;
import vpl.gui.GUI;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

public class VplMainAppletOld extends javax.swing.JApplet {

    private final static int TICK_RATE_MILLISEC = 50;
    private GLAnimatorControl glAnimatorControl;

    /**
     * Initializes the applet VplMainAppletOld
     */
    @Override
    public void init() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VplMainAppletOld.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VplMainAppletOld.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VplMainAppletOld.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VplMainAppletOld.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the applet */
        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {
                public void run() {
                    initComponents();
                    initJogl(mainJPanel);
                    Container parent = getParent();
                    if (parent != null) {
                        setSize(parent.getSize());
                    }
                }
            });
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    
    public void initJogl(JPanel panel) {
        GLProfile.initSingleton();

        final GLCanvas glcanvas = new GLCanvas();

        JOGLtest context = new JOGLtest();
        glcanvas.addGLEventListener(context);
        glcanvas.addKeyListener(context);
        glcanvas.addMouseMotionListener(context);
        glcanvas.addMouseListener(context);

        glcanvas.setSize(panel.getSize());
        panel.add(glcanvas, BorderLayout.CENTER);
        glAnimatorControl = new FPSAnimator(glcanvas, 30);
    }
    
    @Override
    public void start() {
        if (glAnimatorControl != null) {
            glAnimatorControl.start();
        }
    }

    @Override
    public void stop() {
        if (glAnimatorControl != null) {
            glAnimatorControl.stop();
        }
    }
    
    private boolean hasAllPermission() {
        try {
            SecurityManager securityManager = System.getSecurityManager();
            if (securityManager != null) {
                securityManager.checkPermission(SecurityConstants.ALL_PERMISSION);
            }
            return true;
        } catch (SecurityException se) {
            return false;
        }
    }
    
    private void startTask() {
        ScheduledExecutorService executor = Executors.newScheduledThreadPool(1);
        executor.scheduleAtFixedRate(new TimerTask() {
            @Override
            public void run() {
                // actions to be done every {TICK_RATE_MILLISEC} ms
            }
        }, /*first execution delay*/ 0, TICK_RATE_MILLISEC, TimeUnit.MILLISECONDS);
    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        toolBarJPanel = new javax.swing.JPanel();
        ExperimentExecutionJToolBar = new javax.swing.JToolBar();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        SaveLoadJToolBar = new javax.swing.JToolBar();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        objectPalleteJScrollPanel = new javax.swing.JScrollPane();
        elementsList = new javax.swing.JList();
        objectPropertiesJScrollPanel1 = new javax.swing.JScrollPane();
        mainJPanel = new javax.swing.JPanel();

        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(800, 600));

        toolBarJPanel.setLayout(new java.awt.BorderLayout());

        ExperimentExecutionJToolBar.setRollover(true);

        jButton4.setText("jButton4");
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ExperimentExecutionJToolBar.add(jButton4);

        jButton5.setText("jButton5");
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ExperimentExecutionJToolBar.add(jButton5);

        toolBarJPanel.add(ExperimentExecutionJToolBar, java.awt.BorderLayout.PAGE_START);

        SaveLoadJToolBar.setRollover(true);

        jButton6.setText("jButton4");
        jButton6.setFocusable(false);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        SaveLoadJToolBar.add(jButton6);

        jButton7.setText("jButton5");
        jButton7.setFocusable(false);
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        SaveLoadJToolBar.add(jButton7);

        toolBarJPanel.add(SaveLoadJToolBar, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(toolBarJPanel, java.awt.BorderLayout.PAGE_START);

        objectPalleteJScrollPanel.setPreferredSize(new java.awt.Dimension(130, 20));

        elementsList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        objectPalleteJScrollPanel.setViewportView(elementsList);

        getContentPane().add(objectPalleteJScrollPanel, java.awt.BorderLayout.WEST);

        objectPropertiesJScrollPanel1.setPreferredSize(new java.awt.Dimension(130, 20));
        getContentPane().add(objectPropertiesJScrollPanel1, java.awt.BorderLayout.EAST);

        mainJPanel.setLayout(new java.awt.BorderLayout());
        getContentPane().add(mainJPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToolBar ExperimentExecutionJToolBar;
    private javax.swing.JToolBar SaveLoadJToolBar;
    private javax.swing.JList elementsList;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JPanel mainJPanel;
    private javax.swing.JScrollPane objectPalleteJScrollPanel;
    private javax.swing.JScrollPane objectPropertiesJScrollPanel1;
    private javax.swing.JPanel toolBarJPanel;
    // End of variables declaration//GEN-END:variables
}
