/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vpl.gui;

import java.awt.FileDialog;
import java.awt.Frame;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import vpl.physics.controller.Model;
import vpl.physics.controller.PhysicsExecutionTask;
import vpl.physics.controller.SimpleListener;
import vpl.serialization.XmlSerializationManager;
import vpl.serialization.xml.XmlExperiment;

public class ExperimentExecutionJPanel extends javax.swing.JPanel implements SimpleListener {

    private Model model;
    
    /**
     * Creates new form ExperimentExecutionJPanel
     */
    public ExperimentExecutionJPanel() {
        model = Model.getInstance();
        initComponents();
        model.register(this);
        refreshPosition();
    }
    
    @Override
    public void valuesChanged(String message) {
        if(message.equals(Model.CAMERA_POSITION_CHANGED)) {
            refreshPosition();
        }
    }
    
    private void refreshPosition() {
        cameraXTextField.setText(String.format("%4.2f", model.getCameraPosition().getX()));
        cameraYTextField.setText(String.format("%4.2f", model.getCameraPosition().getY()));
        cameraZTextField.setText(String.format("%4.2f", model.getCameraPosition().getZ()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton1 = new javax.swing.JToggleButton();
        jButton2 = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        loadButton = new javax.swing.JButton();
        cameraJPanel = new javax.swing.JPanel();
        xLabel = new javax.swing.JLabel();
        yLabel = new javax.swing.JLabel();
        zLabel = new javax.swing.JLabel();
        cameraXTextField = new javax.swing.JTextField();
        cameraYTextField = new javax.swing.JTextField();
        cameraZTextField = new javax.swing.JTextField();

        setMaximumSize(new java.awt.Dimension(32767, 46));

        jToggleButton1.setText("Play");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Stop");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        loadButton.setText("Load");
        loadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadButtonActionPerformed(evt);
            }
        });

        xLabel.setText("x:");

        yLabel.setText("y:");

        zLabel.setText("z:");

        cameraXTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cameraXTextFieldActionPerformed(evt);
            }
        });

        cameraYTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cameraYTextFieldActionPerformed(evt);
            }
        });

        cameraZTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cameraZTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cameraJPanelLayout = new javax.swing.GroupLayout(cameraJPanel);
        cameraJPanel.setLayout(cameraJPanelLayout);
        cameraJPanelLayout.setHorizontalGroup(
            cameraJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cameraJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(xLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cameraXTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(yLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cameraYTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(zLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cameraZTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        cameraJPanelLayout.setVerticalGroup(
            cameraJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cameraJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cameraJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(xLabel)
                    .addComponent(cameraXTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yLabel)
                    .addComponent(cameraYTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zLabel)
                    .addComponent(cameraZTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToggleButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cameraJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(saveButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loadButton)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2)
                        .addComponent(jToggleButton1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(saveButton)
                        .addComponent(loadButton)))
                .addContainerGap())
            .addComponent(cameraJPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        if (jToggleButton1.isSelected()) {
            jToggleButton1.setText("Pause");
            PhysicsExecutionTask.getInstance().start();
            System.out.println("Playing");
        } else {
            jToggleButton1.setText("Play");
            PhysicsExecutionTask.getInstance().stop();
            System.out.println("Paused");
        }
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jToggleButton1.setText("Play");
        PhysicsExecutionTask.getInstance().stop();
        jToggleButton1.setSelected(false);
        System.out.println("Stopped");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void loadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadButtonActionPerformed
        try {
            final FileDialog loadDialog = new FileDialog(new Frame(), "load", FileDialog.LOAD);
            loadDialog.setVisible(true);
            if (loadDialog.getFile() != null) {
                jButton2ActionPerformed(null); //stop
                File file = new File(loadDialog.getDirectory() + loadDialog.getFile());
                FileInputStream fileInputStream = new FileInputStream(file);
                XmlExperiment xmlExperiment = XmlSerializationManager.unmarshal(fileInputStream);
                model.getPhysics().setRigidBodies(xmlExperiment.exportRigidBodyMap());
                model.getPhysics().setUniformForces(xmlExperiment.exportUniformForceMap());
                fileInputStream.close();
                model.refreshView(Model.RIGID_BODY_LIST_CHANGED);
                model.refreshView(Model.AN_RIGID_BODY_CHANGED);
                System.out.println("LOADED");
            }
        } catch (Exception ex) {
            Logger.getLogger(ExperimentExecutionJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_loadButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        try {
            final FileDialog saveDialog = new FileDialog(new Frame(), "save", FileDialog.SAVE);
            saveDialog.setVisible(true);
            if (saveDialog.getFile() != null) {
                System.out.println(saveDialog.getDirectory() + saveDialog.getFile());
                File file = new File(saveDialog.getDirectory() + saveDialog.getFile());
                FileOutputStream fileOutputStream = new FileOutputStream(file);
                XmlSerializationManager.marshal(fileOutputStream, 
                        new XmlExperiment(model.getPhysics().getRigidBodies(), model.getPhysics().getUniformForces()));
                fileOutputStream.close();
                System.out.println("SAVED");
            }
        } catch (Exception ex) {
            Logger.getLogger(ExperimentExecutionJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void cameraXTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cameraXTextFieldActionPerformed
        model.getCameraPosition().setX(Double.parseDouble(cameraXTextField.getText().replaceAll(",", ".")));
        model.refreshView(Model.CAMERA_POSITION_CHANGED);
    }//GEN-LAST:event_cameraXTextFieldActionPerformed

    private void cameraYTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cameraYTextFieldActionPerformed
        model.getCameraPosition().setY(Double.parseDouble(cameraYTextField.getText().replaceAll(",", ".")));
        model.refreshView(Model.CAMERA_POSITION_CHANGED);
    }//GEN-LAST:event_cameraYTextFieldActionPerformed

    private void cameraZTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cameraZTextFieldActionPerformed
        model.getCameraPosition().setZ(Double.parseDouble(cameraZTextField.getText().replaceAll(",", ".")));
        model.refreshView(Model.CAMERA_POSITION_CHANGED);
    }//GEN-LAST:event_cameraZTextFieldActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel cameraJPanel;
    private javax.swing.JTextField cameraXTextField;
    private javax.swing.JTextField cameraYTextField;
    private javax.swing.JTextField cameraZTextField;
    private javax.swing.JButton jButton2;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JButton loadButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel xLabel;
    private javax.swing.JLabel yLabel;
    private javax.swing.JLabel zLabel;
    // End of variables declaration//GEN-END:variables
}
